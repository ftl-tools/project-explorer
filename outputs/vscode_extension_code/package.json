{
  "name": "ftl-project-explorer",
  "displayName": "FTL Project Explorer",
  "description": "A VSCode extension that helps developers navigate and manage their projects more effectively",
  "version": "0.2.1",
  "publisher": "ftl-tools",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ftl-tools/project-explorer.git"
  },
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onView:projectExplorer",
    "onCommand:projectExplorer.openHelp",
    "onCommand:projectExplorer.openBrainstormingDoc",
    "onCommand:projectExplorer.openSettings",
    "onCommand:projectExplorer.configureTreeItems",
    "onCommand:projectExplorer.collapseAll",
    "onCommand:projectExplorer.showInExplorer",
    "onCommand:projectExplorer.openInBrowser",
    "onCommand:projectExplorer.runScript",
    "onCommand:projectExplorer.openDocInPreview",
    "onCommand:projectExplorer.openDocInEditor"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Project Explorer",
      "properties": {
        "project-explorer.brainstormingDocPath": {
          "type": "string",
          "scope": "resource",
          "markdownDescription": "Absolute path, `~` expansion, or path relative to the first workspace folder pointing to your brainstorming document."
        },
        "project-explorer.openDocsInPreview": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Open Markdown docs in Markdown Preview when true (default)."
        },
        "project-explorer.treeItems": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "markdownDescription": "User-defined items that appear in the Project Explorer tree.",
          "items": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "markdownDescription": "Unique identifier for the item. Must be unique across all items."
              },
              "typeAndPath": {
                "type": "string",
                "markdownDescription": "One of `file:path/to/file`, `folder:path/to/folder`, `url:https://...`, or `script:<command and args>` (runs headlessly)."
              },
              "icon": {
                "type": "string",
                "markdownDescription": "Optional codicon (e.g., `$(rocket)`) or image path (`.svg`, `.png`)."
              },
              "label": {
                "type": "string",
                "markdownDescription": "Optional label. Defaults to the last segment of the path or hostname for URLs."
              },
              "parentId": {
                "type": "string",
                "markdownDescription": "Optional parent item id for nesting."
              },
              "cwd": {
                "type": "string",
                "markdownDescription": "For `script:` items only. Working directory. Supports absolute paths, `~`, or path relative to the first workspace folder."
              },
              "env": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "markdownDescription": "For `script:` items only. Environment variables to add/override for the script process."
              }
            }
          }
        },
        "project-explorer.watchThese": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "markdownDescription": "Watch paths for parsers. Each entry: { type: 'docs' | 'userDefined', path: 'path/from/workspace' }.",
          "items": {
            "type": "object",
            "required": [
              "type",
              "path"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "docs",
                  "userDefined"
                ]
              },
              "path": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "commands": [
      {
        "command": "projectExplorer.openHelp",
        "title": "Help",
        "category": "Project Explorer",
        "icon": {
          "light": "resources/icons/help.light_mode.png",
          "dark": "resources/icons/help.dark_mode.png"
        }
      },
      {
        "command": "projectExplorer.openBrainstormingDoc",
        "title": "Brainstorming",
        "category": "Project Explorer",
        "icon": {
          "light": "resources/icons/lightbulb.light_mode.png",
          "dark": "resources/icons/lightbulb.dark_mode.png"
        }
      },
      {
        "command": "projectExplorer.openSettings",
        "title": "Project Explorer Settings",
        "category": "Project Explorer",
        "icon": "$(gear)"
      },
      {
        "command": "projectExplorer.configureTreeItems",
        "title": "Project Explorer: Configure Tree Itemsâ€¦",
        "category": "Project Explorer"
      },
      {
        "command": "projectExplorer.collapseAll",
        "title": "Collapse All",
        "category": "Project Explorer",
        "icon": "$(collapse-all)"
      },
      {
        "command": "projectExplorer.showInExplorer",
        "title": "Show in Editor's File Explorer",
        "category": "Project Explorer"
      },
      {
        "command": "projectExplorer.openInBrowser",
        "title": "Open in Browser",
        "category": "Project Explorer"
      },
      {
        "command": "projectExplorer.runScript",
        "title": "Run",
        "category": "Project Explorer"
      },
      {
        "command": "projectExplorer.openDocInPreview",
        "title": "Open in Preview",
        "category": "Project Explorer"
      },
      {
        "command": "projectExplorer.openDocInEditor",
        "title": "Open in Editor",
        "category": "Project Explorer"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "projectExplorer.openHelp",
          "when": "view == projectExplorer",
          "group": "navigation@05"
        },
        {
          "command": "projectExplorer.openBrainstormingDoc",
          "when": "view == projectExplorer && projectExplorer.hasBrainstorming",
          "group": "navigation@10"
        },
        {
          "command": "projectExplorer.openSettings",
          "when": "view == projectExplorer",
          "group": "navigation@20"
        },
        {
          "command": "projectExplorer.collapseAll",
          "when": "view == projectExplorer",
          "group": "navigation@30"
        }
      ],
      "view/item/context": [
        {
          "command": "projectExplorer.showInExplorer",
          "when": "view == projectExplorer && (viewItem == projectExplorer.file || viewItem == projectExplorer.folder)",
          "group": "projectExplorer@1"
        },
        {
          "command": "projectExplorer.openInBrowser",
          "when": "view == projectExplorer && viewItem == projectExplorer.url",
          "group": "projectExplorer@1"
        },
        {
          "command": "projectExplorer.runScript",
          "when": "view == projectExplorer && viewItem == projectExplorer.script",
          "group": "projectExplorer@1"
        },
        {
          "command": "projectExplorer.showInExplorer",
          "when": "view == projectExplorer && viewItem == projectExplorer.doc",
          "group": "projectExplorer@1"
        },
        {
          "command": "projectExplorer.openDocInPreview",
          "when": "view == projectExplorer && viewItem == projectExplorer.doc",
          "group": "projectExplorer@2"
        },
        {
          "command": "projectExplorer.openDocInEditor",
          "when": "view == projectExplorer && viewItem == projectExplorer.doc",
          "group": "projectExplorer@3"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "projectExplorer",
          "name": "Project Explorer",
          "when": "true"
        }
      ]
    }
  },
  "scripts": {
    "publish": "vsce publish",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "build": "node build.js",
    "lint": "eslint src --ext ts",
    "test": "npm run test:compile && npm run test:ui",
    "test:compile": "tsc -p ./ && tsc tests/ui/suite/*.ts --outDir out/test/ui --module commonjs --target ES2020 --lib ES2020,DOM --esModuleInterop --resolveJsonModule --skipLibCheck",
    "test:ui": "extest setup-and-run out/test/ui/*.test.js",
    "test:unit": "npm run compile && mocha tests/unit/*.test.js",
    "test:ui:headed": "extest setup-and-run --workspace tests/ui/workspace --tests out/test/ui --disable-extensions --headless=false"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/vsce": "^3.6.0",
    "esbuild": "^0.17.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4",
    "vscode-extension-tester": "^7.3.0",
    "selenium-webdriver": "^4.23.0",
    "mocha": "^10.2.0",
    "@types/mocha": "^10.0.1",
    "ts-node": "^10.9.1",
    "glob": "^8.1.0",
    "@types/glob": "^8.1.0",
    "chai": "^4.3.7",
    "@types/chai": "^4.3.4"
  }
}